syntax = "proto3";

service Raft {
	rpc Join(JoinRequest) returns (JoinResponse) {}
	rpc PutRequest(PutMessage) returns (PutReply) {}
	rpc GetRequest(GetMessage) returns (GetReply) {}
	rpc RequestVote(VoteMessage) returns (VoteReply) {}
	rpc AppendEntries(AEMessage) returns (AEReply) {}
	rpc SpreadLog(LogMessage) returns (LogReply) {}
	rpc SpreadCommit(CommitMessage) returns (CommitReply) {}
	rpc ServeClient (ServeClientArgs) returns (ServeClientReply) {}
}

message PutMessage{
	string type = 1;
	message Payload{
		 string act = 1;
		 string key = 2;
		 string value = 3;
	}
	 Payload payload = 2;
}

message PutReply{
	string code = 1;
	message Payload{
		 string act = 1;
		 string key = 2;
		 string value = 3;
		 string message = 4;
	}
	Payload payload = 2;

}

message GetMessage{
	 string type = 1;
	message Payload{
		 string act = 1;
		 string key = 2;
		 string value = 3;
	}
	 Payload payload = 2;

}

message GetReply{
	 string code = 1;
	message Payload{
		 string act = 1;
		 string key = 2;
		 string value = 3;
		 string message = 4;
	}
	 Payload payload = 2;
}

message VoteMessage{
	int32 term = 1;
 	int32 commitIdx = 2;
	message Staged{
		 string act = 1;
		 string key = 2;
		 string value = 3;
	}
	 Staged staged = 3;
}

message VoteReply{
	 bool choice = 1;
	 int32 term = 2;
}

message AEMessage{
	 int32 term = 1;
	 string addr = 2;
	message Payload{
		 string act = 1;
		 string key = 2;
		 string value = 3;
	}
	 Payload payload = 3;
	 string action = 4;
	 int32 commitIdx = 5;
	 int64 lease_expiry = 6;
}

message AEReply{
	 int32 term = 1;
	 int32 commitIdx = 2;
}

message LogMessage{
	 int32 term = 1;
	 string addr = 2;
	message Payload{
		 string act = 1;
		 string key = 2;
		 string value = 3;
	}
	 Payload staged = 3;
	 string action = 4;
	 int32 commitIdx = 5;

}

message LogReply{
	 int32 term = 1;
	 int32 commitIdx = 2;
}

message CommitMessage{
	 int32 term = 1;
	 string addr = 2;
	message Payload{
		 string act = 1;
		 string key = 2;
		 string value = 3;
	}
	 Payload staged = 3;
	 string action = 4;
}

message CommitReply{
	 int32 term = 1;
	 int32 commitIdx = 2;
}

message JoinRequest {
}

message JoinResponse {
  bool ok = 1;
}

message ServeClientArgs {
  string Request = 1;
}

message ServeClientReply {
  string Data = 1;
  string LeaderID = 2;
  bool Success = 3;
}
